/*
 * Created on 19 nov. 2015 ( Time 13:31:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package cli.persistence.services.fake;

import java.util.List;
import java.util.Map;

import cli.bean.jpa.PersonneEntity;
import cli.persistence.commons.fake.GenericFakeService;
import cli.persistence.services.PersonnePersistence;

/**
 * Fake persistence service implementation ( entity "Personne" )
 *
 * @author Telosys Tools Generator
 */
public class PersonnePersistenceFAKE extends GenericFakeService<PersonneEntity> implements PersonnePersistence {

	public PersonnePersistenceFAKE () {
		super(PersonneEntity.class);
	}
	
	protected PersonneEntity buildEntity(int index) {
		PersonneEntity entity = new PersonneEntity();
		// Init fields with mock values
		entity.setNom( nextString() ) ;
		entity.setPrenom( nextString() ) ;
		entity.setEstadulte( false ) ;
		entity.setInvitevin( false ) ;
		entity.setInvitesoir( false ) ;
		entity.setVientvin( false ) ;
		entity.setVientsoir( false ) ;
		entity.setId( nextInteger() ) ;
		entity.setMail( nextString() ) ;
		return entity ;
	}
	
	
	public boolean delete(PersonneEntity entity) {
		log("delete ( PersonneEntity : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( Integer id ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(PersonneEntity entity) {
		log("insert ( PersonneEntity : " + entity + ")" ) ;
	}

	public PersonneEntity load( Integer id ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<PersonneEntity> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<PersonneEntity> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<PersonneEntity> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public PersonneEntity save(PersonneEntity entity) {
		log("insert ( PersonneEntity : " + entity + ")" ) ;
		return entity;
	}

	public List<PersonneEntity> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

	@Override
	public long countAll() {
		return 0 ;
	}

}
