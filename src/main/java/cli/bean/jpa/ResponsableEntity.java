/*
 * Created on 19 nov. 2015 ( Time 13:31:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package cli.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "RESPONSABLE"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="RESPONSABLE", schema="PUBLIC", catalog="MARIAGEAUDRENCYRIL" )
@NamedQueries ( {
  @NamedQuery ( name="ResponsableEntity.countAll", query="SELECT COUNT(x) FROM ResponsableEntity x" )
} )
public class ResponsableEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ID", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="NOM", nullable=false, length=255)
    private String     nom          ;

    @Column(name="MDP", nullable=false, length=255)
    private String     mdp          ;

    @Column(name="ESTADMIN", nullable=false)
    private Boolean    estadmin     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="responsable", targetEntity=PersonneEntity.class)
    private List<PersonneEntity> listOfPersonne;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ResponsableEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : NOM ( VARCHAR ) 
    public void setNom( String nom ) {
        this.nom = nom;
    }
    public String getNom() {
        return this.nom;
    }

    //--- DATABASE MAPPING : MDP ( VARCHAR ) 
    public void setMdp( String mdp ) {
        this.mdp = mdp;
    }
    public String getMdp() {
        return this.mdp;
    }

    //--- DATABASE MAPPING : ESTADMIN ( BOOLEAN ) 
    public void setEstadmin( Boolean estadmin ) {
        this.estadmin = estadmin;
    }
    public Boolean getEstadmin() {
        return this.estadmin;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfPersonne( List<PersonneEntity> listOfPersonne ) {
        this.listOfPersonne = listOfPersonne;
    }
    public List<PersonneEntity> getListOfPersonne() {
        return this.listOfPersonne;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(nom);
        sb.append("|");
        sb.append(mdp);
        sb.append("|");
        sb.append(estadmin);
        return sb.toString(); 
    } 

}
